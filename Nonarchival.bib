
@online{ram_dr._2003,
	title = {Dr. {Alan} {Kay} on the meaning of ``object-oriented programming''},
	url = {http://www.purl.org/stefan_ram/pub/doc_kay_oop_en},
	language = {en},
	urldate = {2020-03-02},
	author = {Ram, Stefan L.},
    date = {2003-07-23},
    month = jul,
    day = {23},
    year = {2003},
	archivedrepository = {Internet Archive},
    archivedurl = {https://web.archive.org/web/20200108225452/http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en},
    archiveddate = {2020-01-08T22:54:48},
	synopsis = {This is an e-mail thread between Alan Kay and Dr. Stefan Ram dated July 23, and July 26, 2003, in which Kay clarifies his definition of the term ``object-oriented,'' which he coined. We refer to this to illustrate the difference between Kay's meaning of the term ``object-oriented,'' which stressed message passing and late binding, and Bjarne Stroustrup's definition, in which inheritance is the key feature.}
}

@online{patrick_naughton_java_nodate,
	title = {Java {Was} {Strongly} {Influenced} by {Objective}-{C}},
	url = {https://cs.gmu.edu/~sean/stuff/java-objc.html},
	urldate = {2020-03-02},
	author = {Patrick Naughton},
	archivedrepository = {Internet Archive},
    archivedurl = {https://web.archive.org/web/20190617000753/https://cs.gmu.edu/~sean/stuff/java-objc.html},
    archiveddate = {2019-08-04T22:20:56},
    synopsis = {This undated online posting by Patrick Naughton explains how Objective-C was influential on the early Oak (later Java) project, both because Naughton himself liked it and had considered going to NeXT, and because the Oak team ended up hiring many former NeXT engineers. Naughton explains that ``Java's `interface' is a direct rip-off of Obj-C's `protocol' which was largely designed by these ex-NeXT'ers\textellipsis{}''
    }
}

@misc{cringely_triumph_1996,
	title = {Triumph of the {Nerds}: {The} {Transcripts}, {Part} {III}},
	url = {http://www.pbs.org/nerds/part3.html},
	urldate = {2020-03-02},
	journal = {PBS.org},
	author = {Cringely, Robert X.},
	month = jun,
	year = {1996},
	archivedrepository = {Internet Archive},
    archivedurl = {https://web.archive.org/web/20200104110141/http://www.pbs.org/nerds/part3.html},
    archiveddate = {2020-01-04T11:01:41},
	excerpt = {Steve Jobs: ``And they showed me really three things. But I was so blinded by the first one I didn't even really see the other two. One of the things they showed me was object orient[ed] programming\textellipsis{} but I didn't even see that. The other one they showed me was a networked computer system\textellipsis{} I didn't even see that. I was so blinded by the first thing they showed me which was the graphical user interface.''}
}

@misc{love_skype_2019,
	title = {Skype interview with {Tom} {Love}},
	language = {English},
	author = {Love, Tom},
	collaborator = {Hsu, Hansen},
	date = {2019-04-17},
	month = apr,
	day = {17},
	year = {2019},
	synopsis = {This Skype oral history interview of Tom Love by Hansen Hsu covers his work at the Programming Technology Center at ITT on programmer productivity with Brad Cox and others, leading eventually to the founding of PPI/Stepstone, and the creation of Objective-C. Love also discusses the business side of PPI/Stepstone, conflicts with the board, his departure, his subsequent ventures, and the final sale of all Objective-C IP to NeXT.
	}
}

@misc{love_e-mail_2019,
	title = {E-mail with {Tom} {Love}, {Subject}: {Yesterday}'s {Questions}},
	author = {Love, Tom},
	month = jun,
	day = {1},
	year = {2019},
	date = {2019-06-01},
	excerpt = {``1. How many customers did Stepstone have when I resigned from the company? 
	Hundreds of companies including:  Apple, HP, IBM, Siemens, Philips, US West, Accuray (acquired by ABB), Port of Singapore, GE Medical, Brooklyn Union Gas, Prime Computer, Lawrence Livermore Labs, Artecon, Sun, Tektronix, NeXT, Ford Motor Company,  and many more prominent companies and organizations including NSA in Japan, Germany, and the UK.  Hiding in my store room is a notebook with business cards from these companies and many many others.  Most of these companies that used Objective-C were described in my 1993 book, Object Lessons.
	2. What were the business relationships with companies like HP, Apple and NeXT? 
	All purchased Objective C and later IC-pacs.  HP surely had a corporate wide license as did NeXT.  All signed a PPI and later Stepstone purchase contract.  NeXT had the `sweetest deal'  \$5 for every device running Objective C.  Just as I was leaving Stepstone, IBM, NeXT, and HP were negotiating a joint press release committing to the bundling of Objective-C on their company's workstations.  I naievely [\emph{sic}] thought this was a `sure thing' and that Stepstone was launched and would continue to grow and prosper.  I created Orgware, a one person consulting company doing work with VCs, start up companies, and large companies like Ericsson, Philips, JP Morgan, and Dun and Bradstreet.
	3.  Were there development contracts with these Objective-C companies?
    Product purchases and associated contracts but generally not development contracts.  I believe there was a development contract with NeXT after I left the company.  Apple bought an early copy of Objective-C and later often said, `we never really used Objective-C, but we really appreciated the testing of our C compiler that PPI/Stepstone did for us'.  HP used Objective-C extensively at many locations worldwide.''
	}
}

@misc{apple_inc_protocols_2020,
	title = {Protocols},
	url = {https://docs.swift.org/swift-book/LanguageGuide/Protocols.html#ID521},
	urldate = {2020-02-26},
	journal = {The Swift Programming Language (Swift 5.2)},
	author = {{Apple Inc.}},
	year = {2020},
	synopsis = {This website describes the Protocols feature of Swift, which defines an abstract data type interface that types can adopt, conform to, and implement. Protocols provide multiple inheritance of interface but not implementation, as conforming types provide their own implementation. Extensions on Protocols allow programmers to add methods and their implementations to a protocol which all conforming classes will automatically gain. We refer specifically to the section of the website describing Extensions on Protocols in Swift to document that this functionality originally proposed for Objective-C in 1995 but never shipped finally became available in the Swift successor language in 2014. 
	}
}

@misc{apple_inc_extensions_2020,
	title = {Extensions},
	url = {https://docs.swift.org/swift-book/LanguageGuide/Extensions.html},
	urldate = {2020-02-26},
	journal = {The Swift Programming Language (Swift 5.2)},
	author = {{Apple Inc.}},
	year = {2020},
	synopsis = {This website describes the Extensions feature in Swift, which allows the addition of new functionality to types for which the programmer does not have access to the source code, similar to categories in Objective-C. We refer to it to illustrate how important categories in Objective-C became to Apple's language idioms and have continued in Swift, albeit under a new name.
	}
}

@online{microsoft_extension_2015,
	title = {Extension {Methods} --- {C}\# {Programming} {Guide}},
	url = {https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods},
	language = {en-us},
	urldate = {2019-08-02},
	journal = {C\# Guide},
	author = {{Microsoft}},
	month = jul,
	year = {2015},
	synopsis = {This website describes Extension methods in C\#, which enable the addition of methods to a class without subclassing, recompiling, or otherwise modifying the original type. We refer to this website to document that C\# has a feature similar to categories in Objective-C.
	}
}